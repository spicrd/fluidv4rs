@use "sass:list";
@use "functions" as *;

@mixin fluidv4rs($name, $minViewport, $maxViewport, $items...) {

  @each $item in $items {
    $varName: $name;
    $varMin: null;
    $varMax: null;
    $varMinViewport: $minViewport;
    $varMaxViewport: $maxViewport;
    
    @if type-of($item) == "map" {
      $varMin: map-get($item, "min");
      $varMax: map-get($item, "max");
      @if map-get($item, "minViewport") != null {
        $varMinViewport: map-get($item, "minViewport");
      }
      @if map-get($item, "maxViewport") != null {
        $varMaxViewport: map-get($item, "maxViewport");
      }
      @if map-get($item, "name") != null {
        $varName: map-get($item, "name");
      } @else {
        @if $varMinViewport == $minViewport and $varMaxViewport == $maxViewport {
          $varName: #{$name}-#{$varMin}-#{$varMax};
        } @else {
          $varName: #{$name}-#{$varMin}-#{$varMax}-#{$varMinViewport}-#{$varMaxViewport};
        }
      }
    } @else {
      $splitValues: str-split($item, "/");
      @if length($splitValues) == 2 {
        $varMin: to-number(list.nth($splitValues, 1));
        $varMax: to-number(list.nth($splitValues, 2));
        $varName: #{$name}-#{$varMin}-#{$varMax};
      }
      @if length($splitValues) == 3 {
        $varMin: to-number(list.nth($splitValues, 2));
        $varMax: to-number(list.nth($splitValues, 3));
        $varName: list.nth($splitValues, 1);
      }
      @if length($splitValues) == 4 {
        $varMin: to-number(list.nth($splitValues, 1));
        $varMax: to-number(list.nth($splitValues, 2));
        $varMinViewport: to-number(list.nth($splitValues, 3));
        $varMaxViewport: to-number(list.nth($splitValues, 4));
        $varName: #{$name}-#{$varMin}-#{$varMax}-#{$varMinViewport}-#{$varMaxViewport};
      }
      @if length($splitValues) == 5 {
        $varMin: to-number(list.nth($splitValues, 2));
        $varMax: to-number(list.nth($splitValues, 3));
        $varMinViewport: to-number(list.nth($splitValues, 4));
        $varMaxViewport: to-number(list.nth($splitValues, 5));
        $varName: list.nth($splitValues, 1);
      }
    }
    
    $minRemValue: calc($varMin / 16);
    $maxRemValue: calc($varMax / 16);
    $minViewportRemValue: calc($varMinViewport / 16);
    $maxViewportRemValue: calc($varMaxViewport / 16);
    
    --#{$varName}: #{variableValue($minRemValue, $maxRemValue, $minViewportRemValue, $maxViewportRemValue)};
  }
}

@function variableValue($min, $max, $minViewport, $maxViewport) {
  $maxMinusMin: $max - $min;
  $maxMinusMinViewport: $maxViewport - $minViewport;
  
  @return clamp(#{$min}rem, #{$min}rem + #{$maxMinusMin} * ((100vw - #{$minViewport}rem) / #{$maxMinusMinViewport}), #{$max}rem);
}